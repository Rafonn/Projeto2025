@import "tailwindcss";
@import "tw-animate-css";
@import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@400..900&display=swap');

@custom-variant dark (&:is(.dark *));

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
  --color-sidebar-ring: var(--sidebar-ring);
  --color-sidebar-border: var(--sidebar-border);
  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
  --color-sidebar-accent: var(--sidebar-accent);
  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
  --color-sidebar-primary: var(--sidebar-primary);
  --color-sidebar-foreground: var(--sidebar-foreground);
  --color-sidebar: var(--sidebar);
  --color-chart-5: var(--chart-5);
  --color-chart-4: var(--chart-4);
  --color-chart-3: var(--chart-3);
  --color-chart-2: var(--chart-2);
  --color-chart-1: var(--chart-1);
  --color-ring: var(--ring);
  --color-input: var(--input);
  --color-border: var(--border);
  --color-destructive: var(--destructive);
  --color-accent-foreground: var(--accent-foreground);
  --color-accent: var(--accent);
  --color-muted-foreground: var(--muted-foreground);
  --color-muted: var(--muted);
  --color-secondary-foreground: var(--secondary-foreground);
  --color-secondary: var(--secondary);
  --color-primary-foreground: var(--primary-foreground);
  --color-primary: var(--primary);
  --color-popover-foreground: var(--popover-foreground);
  --color-popover: var(--popover);
  --color-card-foreground: var(--card-foreground);
  --color-card: var(--card);
  --radius-sm: calc(var(--radius) - 4px);
  --radius-md: calc(var(--radius) - 2px);
  --radius-lg: var(--radius);
  --radius-xl: calc(var(--radius) + 4px);
}

:root {
  --radius: 0.625rem;
  --background: oklch(1 0 0);
  --foreground: oklch(0.129 0.042 264.695);
  --card: oklch(1 0 0);
  --card-foreground: oklch(0.129 0.042 264.695);
  --popover: oklch(1 0 0);
  --popover-foreground: oklch(0.129 0.042 264.695);
  --primary: oklch(0.208 0.042 265.755);
  --primary-foreground: oklch(0.984 0.003 247.858);
  --secondary: oklch(0.968 0.007 247.896);
  --secondary-foreground: oklch(0.208 0.042 265.755);
  --muted: oklch(0.968 0.007 247.896);
  --muted-foreground: oklch(0.554 0.046 257.417);
  --accent: oklch(0.968 0.007 247.896);
  --accent-foreground: oklch(0.208 0.042 265.755);
  --destructive: oklch(0.577 0.245 27.325);
  --border: oklch(0.929 0.013 255.508);
  --input: oklch(0.929 0.013 255.508);
  --ring: oklch(0.704 0.04 256.788);
  --chart-1: oklch(0.646 0.222 41.116);
  --chart-2: oklch(0.6 0.118 184.704);
  --chart-3: oklch(0.398 0.07 227.392);
  --chart-4: oklch(0.828 0.189 84.429);
  --chart-5: oklch(0.769 0.188 70.08);
  --sidebar: oklch(0.984 0.003 247.858);
  --sidebar-foreground: oklch(0.129 0.042 264.695);
  --sidebar-primary: oklch(0.208 0.042 265.755);
  --sidebar-primary-foreground: oklch(0.984 0.003 247.858);
  --sidebar-accent: oklch(0.968 0.007 247.896);
  --sidebar-accent-foreground: oklch(0.208 0.042 265.755);
  --sidebar-border: oklch(0.929 0.013 255.508);
  --sidebar-ring: oklch(0.704 0.04 256.788);
}

.dark {
  --background: oklch(0.129 0.042 264.695);
  --foreground: oklch(0.984 0.003 247.858);
  --card: oklch(0.208 0.042 265.755);
  --card-foreground: oklch(0.984 0.003 247.858);
  --popover: oklch(0.208 0.042 265.755);
  --popover-foreground: oklch(0.984 0.003 247.858);
  --primary: oklch(0.929 0.013 255.508);
  --primary-foreground: oklch(0.208 0.042 265.755);
  --secondary: oklch(0.279 0.041 260.031);
  --secondary-foreground: oklch(0.984 0.003 247.858);
  --muted: oklch(0.279 0.041 260.031);
  --muted-foreground: oklch(0.704 0.04 256.788);
  --accent: oklch(0.279 0.041 260.031);
  --accent-foreground: oklch(0.984 0.003 247.858);
  --destructive: oklch(0.704 0.191 22.216);
  --border: oklch(1 0 0 / 10%);
  --input: oklch(1 0 0 / 15%);
  --ring: oklch(0.551 0.027 264.364);
  --chart-1: oklch(0.488 0.243 264.376);
  --chart-2: oklch(0.696 0.17 162.48);
  --chart-3: oklch(0.769 0.188 70.08);
  --chart-4: oklch(0.627 0.265 303.9);
  --chart-5: oklch(0.645 0.246 16.439);
  --sidebar: oklch(0.208 0.042 265.755);
  --sidebar-foreground: oklch(0.984 0.003 247.858);
  --sidebar-primary: oklch(0.488 0.243 264.376);
  --sidebar-primary-foreground: oklch(0.984 0.003 247.858);
  --sidebar-accent: oklch(0.279 0.041 260.031);
  --sidebar-accent-foreground: oklch(0.984 0.003 247.858);
  --sidebar-border: oklch(1 0 0 / 10%);
  --sidebar-ring: oklch(0.551 0.027 264.364);
}

@layer base {
  * {
    @apply border-border outline-ring/50;
  }

  html,
  body {
    height: 100%;
    margin: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    font-family: Arial, sans-serif;
    background-image: url('../images/fundo.png');
    background-size: cover;
    /* faz a imagem cobrir toda a área */
    background-position: center;
    /* centra a imagem */
    background-repeat: no-repeat;
    /* evita repetição da imagem */
    background-color: #202123;
  }
}

@keyframes border-animation {
  0% {
    top: 0;
    left: -10%;
    width: 100px;
    height: 4px;
  }

  25% {
    top: 0;
    left: 100%;
    width: 100px;
    height: 4px;
  }

  26% {
    top: -20%;
    left: 99.6%;
    width: 4px;
    height: 100px;
  }

  50% {
    top: 99.6%;
    left: 99.6%;
    width: 4px;
    height: 100px;
  }

  51% {
    top: 99.6%;
    left: 99.6%;
    width: 100px;
    height: 4px;
  }

  75% {
    top: 99.6%;
    left: -10%;
    width: 100px;
    height: 4px;
  }

  76% {
    top: 100%;
    left: 0%;
    width: 4px;
    height: 100px;
  }

  100% {
    top: -17%;
    left: 0;
    width: 4px;
    height: 100px;
  }
}

@keyframes color-pulse {
  0% {
    color: #3B82F6;
  }

  50% {
    color: #60A5FA;
  }

  100% {
    color: #3B82F6;
  }
}

.main-page h1,
.main-page p {
  animation: color-pulse 3s ease-in-out infinite;
}

.button-out {
  padding: 1.3em 3em;
  font-size: 12px;
  text-transform: uppercase;
  letter-spacing: 2.5px;
  font-weight: 500;
  border-radius: 45px;
  box-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);
  transition: all 0.3s ease 0s;
  cursor: pointer;
  outline: none;
}

.button-out:hover {
  background-color: #ff0000;
  box-shadow: 0px 15px 20px rgba(0, 0, 0, 0.4);
  color: #fff;
  transform: translateY(-7px);
}

.button-out:active {
  transform: translateY(-1px);
}

.animate-border {
  position: relative;
}

.animate-border::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  border: 2px solid #0066ff;
  animation: border-animation 4s cubic-bezier(0.4, 0, 0.2, 1) infinite;
  pointer-events: none;
  z-index: 1;
}

.card-with-background {
  background-image: url('../images/logo.png');
  background-size: 10%;
  background-position: center;
  background-repeat: no-repeat;
  position: relative;
}

.login-card-with-background {
  background-image: url('../images/logo.png');
  background-size: 50%;
  background-position: center;
  background-repeat: no-repeat;
  position: relative;
}

@keyframes pulse-shadow {

  0%,
  100% {
    box-shadow: 0 8px 5px rgba(30, 137, 244, 0.413);
  }

  50% {
    box-shadow: 0 8px 24px rgba(30, 137, 244, 0.413);
  }
}

.pulse-shadow {
  will-change: box-shadow;

  animation: pulse-shadow 5s ease-in-out infinite;
}

.button-logout {
  cursor: pointer;
  position: relative;
  padding: 10px 24px;
  font-size: 18px;
  color: rgb(255, 255, 255);
  border: 2px solid white;
  border-radius: 34px;
  background-color: #006db0;
  font-weight: 600;
  transition: all 0.3s cubic-bezier(0.23, 1, 0.320, 1);
  overflow: hidden;
}

.button-logout::before {
  content: '';
  position: absolute;
  inset: 0;
  margin: auto;
  width: 50px;
  height: 50px;
  border-radius: inherit;
  scale: 0;
  z-index: -1;
  background-color: white;
  transition: all 0.6s cubic-bezier(0.23, 1, 0.320, 1);
}

.button-logout:hover::before {
  scale: 3;
}

.button-logout:hover {
  color: #006db0;
  scale: 1.1;
  box-shadow: 0 0px 20px rgba(193, 163, 98,0.4);
}

.button-logout:active {
  scale: 1;
}

.btn-login {
  display: block;
  margin: 1rem auto;
  border: none;
  border-radius: 4px;
  font-weight: bold;
  font-size: 0.8em;
  text-transform: uppercase;
  padding: 1em 3rem;
  background-color: #006db0;
  color: #f5f5f5;
  box-shadow: 0 8px 24px 0 rgba(0, 128, 255, 0.413);
  transition: all .3s ease-in-out;
}

.btn-login-link {
  color: #f5f5f5;
  display: block;
  font-size: .75em;
  transition: color .3s ease-out;
}

.field input:focus::placeholder {
  opacity: 0;
  transition: opacity .3s;
}

.btn-login:hover {
  background-color: #f5f5f5;
  color: #006db0;
  box-shadow: 0 8px 24px 0 rgb(16 39 112 / 20%);
}

.btn-login-link:hover {
  color: #006db0;
}


.bot-reponse-bg {
  background: #395176;
}

.neo-toggle-container {
  --toggle-width: 80px;
  --toggle-height: 38px;
  --toggle-bg: #181c20;
  --toggle-off-color: #475057;
  --toggle-on-color: #36f9c7;
  --toggle-transition: 0.4s cubic-bezier(0.25, 1, 0.5, 1);

  position: relative;
  display: inline-flex;
  flex-direction: column;
  font-family: "Segoe UI", Tahoma, sans-serif;
  user-select: none;
  padding: 0;
  margin: 0;
  top: 0;
  bottom: 0;
}

.neo-toggle-input {
  position: absolute;
  opacity: 0;
  width: 0;
  height: 0;
}

.neo-toggle {
  position: relative;
  width: var(--toggle-width);
  height: var(--toggle-height);
  display: block;
  cursor: pointer;
  transform: translateZ(0);
  perspective: 500px;
}

.neo-track {
  position: absolute;
  inset: 0;
  border-radius: calc(var(--toggle-height) / 2);
  overflow: hidden;
  transform-style: preserve-3d;
  transform: translateZ(-1px);
  transition: transform var(--toggle-transition);
  box-shadow:
    0 2px 10px rgba(0, 0, 0, 0.5),
    inset 0 0 0 1px rgba(255, 255, 255, 0.1);
}

.neo-background-layer {
  position: absolute;
  inset: 0;
  background: var(--toggle-bg);
  background-image: linear-gradient(-45deg,
      rgba(20, 20, 20, 0.8) 0%,
      rgba(30, 30, 30, 0.3) 50%,
      rgba(20, 20, 20, 0.8) 100%);
  opacity: 1;
  transition: all var(--toggle-transition);
}

.neo-grid-layer {
  position: absolute;
  inset: 0;
  background-image: linear-gradient(to right,
      rgba(71, 80, 87, 0.05) 1px,
      transparent 1px),
    linear-gradient(to bottom, rgba(71, 80, 87, 0.05) 1px, transparent 1px);
  background-size: 5px 5px;
  opacity: 0;
  transition: opacity var(--toggle-transition);
}

.neo-track-highlight {
  position: absolute;
  inset: 1px;
  border-radius: calc(var(--toggle-height) / 2);
  background: linear-gradient(90deg, transparent, rgba(54, 249, 199, 0));
  opacity: 0;
  transition: all var(--toggle-transition);
}

.neo-spectrum-analyzer {
  position: absolute;
  bottom: 6px;
  right: 10px;
  height: 10px;
  display: flex;
  align-items: flex-end;
  gap: 2px;
  opacity: 0;
  transition: opacity var(--toggle-transition);
}

.neo-spectrum-bar {
  width: 2px;
  height: 3px;
  background-color: var(--toggle-on-color);
  opacity: 0.8;
}

.neo-thumb {
  position: absolute;
  top: 4px;
  left: 4px;
  width: 30px;
  height: 30px;
  border-radius: 50%;
  transform-style: preserve-3d;
  transition: transform var(--toggle-transition);
  z-index: 1;
}

.neo-thumb-ring {
  position: absolute;
  inset: 0;
  border-radius: 50%;
  border: 1px solid rgba(255, 255, 255, 0.1);
  background: var(--toggle-off-color);
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
  transition: all var(--toggle-transition);
}

.neo-thumb-core {
  position: absolute;
  inset: 5px;
  border-radius: 50%;
  background: linear-gradient(135deg, rgba(255, 255, 255, 0.1), transparent);
  transition: all var(--toggle-transition);
  overflow: hidden;
  display: flex;
  align-items: center;
  justify-content: center;
}

.neo-thumb-icon {
  position: relative;
  width: 10px;
  height: 10px;
  transition: all var(--toggle-transition);
}

.neo-thumb-wave {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 10px;
  height: 2px;
  background: var(--toggle-off-color);
  transform: translate(-50%, -50%);
  transition: all var(--toggle-transition);
}

.neo-thumb-pulse {
  position: absolute;
  inset: 0;
  border-radius: 50%;
  border: 1px solid var(--toggle-off-color);
  transform: scale(0);
  opacity: 0;
  transition: all var(--toggle-transition);
}

.neo-gesture-area {
  position: absolute;
  inset: -10px;
  z-index: 0;
}

.neo-interaction-feedback {
  position: absolute;
  inset: 0;
  pointer-events: none;
  z-index: 0;
}

.neo-ripple {
  position: absolute;
  top: 50%;
  left: 30%;
  width: 0;
  height: 0;
  border-radius: 50%;
  background: radial-gradient(circle,
      var(--toggle-on-color) 0%,
      transparent 70%);
  transform: translate(-50%, -50%);
  opacity: 0;
  transition: all 0.4s ease-out;
}

.neo-progress-arc {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 80px;
  height: 80px;
  border-radius: 50%;
  border: 2px solid transparent;
  border-top-color: var(--toggle-on-color);
  transform: translate(-50%, -50%) scale(0) rotate(0deg);
  opacity: 0;
  transition:
    opacity 0.3s ease,
    transform 0.5s ease;
}

.neo-status {
  position: absolute;
  bottom: -20px;
  left: 0;
  width: 100%;
  display: flex;
  justify-content: center;
}

.neo-status-indicator {
  display: flex;
  align-items: center;
  gap: 4px;
}

.neo-status-dot {
  width: 6px;
  height: 6px;
  border-radius: 50%;
  background-color: var(--toggle-off-color);
  transition: all var(--toggle-transition);
}

.neo-status-text {
  font-size: 9px;
  font-weight: 600;
  color: var(--toggle-off-color);
  letter-spacing: 1px;
  transition: all var(--toggle-transition);
}

.neo-value-display {
  position: absolute;
  top: -22px;
  right: 0;
  font-size: 12px;
  font-weight: 500;
  color: var(--toggle-off-color);
  opacity: 0;
  transform: translateY(5px);
  transition: all var(--toggle-transition);
}

.neo-value-text {
  transition: all var(--toggle-transition);
}

.neo-toggle-input:checked+.neo-toggle .neo-thumb {
  transform: translateX(calc(var(--toggle-width) - 38px));
}

.neo-toggle-input:checked+.neo-toggle .neo-thumb-ring {
  background-color: var(--toggle-on-color);
  border-color: rgba(54, 249, 199, 0.3);
  box-shadow: 0 0 15px rgba(54, 249, 199, 0.5);
}

.neo-toggle-input:checked+.neo-toggle .neo-thumb-wave {
  height: 8px;
  width: 8px;
  border-radius: 50%;
  background: transparent;
  border: 1px solid #fff;
}

.neo-toggle-input:checked+.neo-toggle .neo-thumb-pulse {
  transform: scale(1.2);
  opacity: 0.3;
  animation: neo-pulse 1.5s infinite;
}

.neo-toggle-input:checked+.neo-toggle .neo-track-highlight {
  background: linear-gradient(90deg, transparent, rgba(54, 249, 199, 0.2));
  opacity: 1;
}

.neo-toggle-input:checked+.neo-toggle .neo-grid-layer {
  opacity: 1;
}

.neo-toggle-input:checked+.neo-toggle .neo-spectrum-analyzer {
  opacity: 1;
}

.neo-toggle-input:checked+.neo-toggle .neo-spectrum-bar:nth-child(1) {
  animation: neo-spectrum 0.9s infinite;
}

.neo-toggle-input:checked+.neo-toggle .neo-spectrum-bar:nth-child(2) {
  animation: neo-spectrum 0.8s 0.1s infinite;
}

.neo-toggle-input:checked+.neo-toggle .neo-spectrum-bar:nth-child(3) {
  animation: neo-spectrum 1.1s 0.2s infinite;
}

.neo-toggle-input:checked+.neo-toggle .neo-spectrum-bar:nth-child(4) {
  animation: neo-spectrum 0.7s 0.1s infinite;
}

.neo-toggle-input:checked+.neo-toggle .neo-spectrum-bar:nth-child(5) {
  animation: neo-spectrum 0.9s 0.15s infinite;
}

.neo-toggle-input:checked+.neo-toggle .neo-status-dot {
  background-color: var(--toggle-on-color);
  box-shadow: 0 0 8px var(--toggle-on-color);
}

.neo-toggle-input:checked+.neo-toggle .neo-status-text {
  color: var(--toggle-on-color);
  content: "ACTIVE";
}

.neo-toggle-input:checked+.neo-toggle+.neo-value-display {
  opacity: 1;
  transform: translateY(0);
}

.neo-toggle-input:checked+.neo-toggle+.neo-value-display .neo-value-text {
  color: var(--toggle-on-color);
}

.neo-toggle:hover .neo-thumb-ring {
  transform: scale(1.05);
}

.neo-toggle-input:not(:checked)+.neo-toggle:hover .neo-thumb-wave::before,
.neo-toggle-input:not(:checked)+.neo-toggle:hover .neo-thumb-wave::after {
  opacity: 1;
}

.neo-toggle.neo-dragging .neo-track {
  transform: translateZ(-1px) scale(1.02);
}

.neo-toggle.neo-dragging .neo-thumb {
  transition: none;
}

@keyframes neo-pulse {
  0% {
    transform: scale(1);
    opacity: 0.5;
  }

  50% {
    transform: scale(1.5);
    opacity: 0.2;
  }

  100% {
    transform: scale(1);
    opacity: 0.5;
  }
}

@keyframes neo-spectrum {
  0% {
    height: 3px;
  }

  50% {
    height: 8px;
  }

  100% {
    height: 3px;
  }
}

.neo-toggle.neo-activated .neo-ripple {
  width: 100px;
  height: 100px;
  opacity: 0.5;
  transition: all 0.6s ease-out;
}

.neo-toggle.neo-progress .neo-progress-arc {
  opacity: 0.8;
  transform: translate(-50%, -50%) scale(1) rotate(270deg);
  transition:
    opacity 0.3s ease,
    transform 1s ease;
}

.neo-toggle-input:checked+.neo-toggle .neo-status-text::before {
  content: "ACTIVE";
}

.neo-toggle-input:not(:checked)+.neo-toggle .neo-status-text::before {
  content: "STANDBY";
}

.circle-container {
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  width: 100%;
  bottom: 45px;
}

.circle {
  position: absolute;
  width: 20px;
  height: 20px;
  border-radius: 50%;
  border: 2px solid rgb(0, 140, 255);
  transform-origin: center;
  transform-style: preserve-3d;
  margin: 0 10px;
}

.circle:nth-child(1),
.circle:nth-child(2),
.circle:nth-child(3),
.circle:nth-child(4),
.circle:nth-child(5) {
  width: 50px;
  height: 50px;
}

.circle:nth-child(1) {
  animation: rotateX 5s linear infinite;
}

.circle:nth-child(2) {
  animation: rotateY 4s linear infinite;
}

.circle:nth-child(3) {
  animation: rotateZ 3s linear infinite;
}

.circle:nth-child(4) {
  animation: rotateDiagonal1 6s linear infinite;
}

.circle:nth-child(5) {
  animation: rotateDiagonal2 7s linear infinite;
}

@keyframes rotateX {
  from {
    transform: rotateX(0deg);
  }

  to {
    transform: rotateX(360deg);
  }
}

@keyframes rotateY {
  from {
    transform: rotateY(0deg);
  }

  to {
    transform: rotateY(360deg);
  }
}

@keyframes rotateZ {
  from {
    transform: rotateZ(0deg);
  }

  to {
    transform: rotateZ(360deg);
  }
}

@keyframes rotateDiagonal1 {
  from {
    transform: rotate3d(1, 1, 0, 0deg);
  }

  to {
    transform: rotate3d(1, 1, 0, 360deg);
  }
}

@keyframes rotateDiagonal2 {
  from {
    transform: rotate3d(-1, 1, 0, 0deg);
  }

  to {
    transform: rotate3d(-1, 1, 0, 360deg);
  }
}